// swiftlint:disable all
// Generated using SwiftGen â€” https://github.com/SwiftGen/SwiftGen

#if os(OSX)
  import AppKit.NSImage
  internal typealias AssetColorTypeAlias = NSColor
  internal typealias AssetImageTypeAlias = NSImage
#elseif os(iOS) || os(tvOS) || os(watchOS)
  import UIKit.UIImage
  internal typealias AssetColorTypeAlias = UIColor
  internal typealias AssetImageTypeAlias = UIImage
#endif

// swiftlint:disable superfluous_disable_command
// swiftlint:disable file_length

// MARK: - Asset Catalogs

// swiftlint:disable identifier_name line_length nesting type_body_length type_name
internal enum Asset {
  internal enum Assets {
    internal static let defaultIcon = ImageAsset(name: "DefaultIcon")
    internal static let launchIcon = ImageAsset(name: "LaunchIcon")
    internal static let dropdownAnim00 = ImageAsset(name: "dropdown_anim_00")
    internal static let dropdownAnim01 = ImageAsset(name: "dropdown_anim_01")
    internal static let dropdownAnim02 = ImageAsset(name: "dropdown_anim_02")
    internal static let dropdownAnim03 = ImageAsset(name: "dropdown_anim_03")
    internal static let dropdownAnim04 = ImageAsset(name: "dropdown_anim_04")
    internal static let loadingImgBlue = ImageAsset(name: "loading_imgBlue")
    internal static let placeholderEmptydataset = ImageAsset(name: "placeholder_emptydataset")
    internal static let unsplashDefault = ImageAsset(name: "unsplash_default")
    internal static let unsplashLoading = ImageAsset(name: "unsplash_loading")
  }
  internal enum NiceWallpaper {
    internal static let aboutusNicewallpaper = ImageAsset(name: "aboutus_nicewallpaper")
    internal static let btnContributeCancle = ImageAsset(name: "btn_contribute_cancle")
    internal static let btnContributeCancleRound = ImageAsset(name: "btn_contribute_cancle_round")
    internal static let btnContributeCommit = ImageAsset(name: "btn_contribute_commit")
    internal static let btnDownLoadImage = ImageAsset(name: "btn_downLoadImage")
    internal static let btnEditShareBack = ImageAsset(name: "btn_editShare_back")
    internal static let btnEditShareRemainNum = ImageAsset(name: "btn_editShare_remainNum")
    internal static let btnEditShareShare = ImageAsset(name: "btn_editShare_share")
    internal static let btnSetContribute = ImageAsset(name: "btn_set_contribute")
    internal static let btnSetFeedback = ImageAsset(name: "btn_set_feedback")
    internal static let btnSetOvalBkgNormal = ImageAsset(name: "btn_set_ovalBkg_normal")
    internal static let btnSetOvalBkgOrange = ImageAsset(name: "btn_set_ovalBkg_orange")
    internal static let btnSetPraiseMe = ImageAsset(name: "btn_set_praiseMe")
    internal static let btnShareMore = ImageAsset(name: "btn_share_more")
    internal static let btnSina = ImageAsset(name: "btn_sina")
    internal static let btnTencent = ImageAsset(name: "btn_tencent")
    internal static let btnWxFriendCircle = ImageAsset(name: "btn_wx_friendCircle")
    internal static let btnWxFriendList = ImageAsset(name: "btn_wx_friendList")
    internal static let buttonWhiteNormal = ImageAsset(name: "button_white_normal")
    internal static let buttonWhitePressed = ImageAsset(name: "button_white_pressed")
    internal static let callBtnGreen = ImageAsset(name: "call_btn_green")
    internal static let checkMark = ImageAsset(name: "checkMark")
    internal static let collectionPicMask = ImageAsset(name: "collection_pic_mask")
    internal static let commonAttention = ImageAsset(name: "common_attention")
    internal static let commonCheckboxChecked = ImageAsset(name: "common_checkbox_checked")
    internal static let commonCheckboxUnchecked = ImageAsset(name: "common_checkbox_unchecked")
    internal static let commonEditNormal = ImageAsset(name: "common_edit_normal")
    internal static let commonEditPressed = ImageAsset(name: "common_edit_pressed")
    internal static let commonSuccess = ImageAsset(name: "common_success")
    internal static let contributeShadow = ImageAsset(name: "contribute_shadow")
    internal static let crossMark = ImageAsset(name: "crossMark")
    internal static let defaultBgOs5 = ImageAsset(name: "default_bg_os5")
    internal static let defaultIconOs5 = ImageAsset(name: "default_icon_os5")
    internal static let defaultMaskOs5 = ImageAsset(name: "default_mask_os5")
    internal static let defaultTextOs5 = ImageAsset(name: "default_text_os5")
    internal static let guideCircle0 = ImageAsset(name: "guide_circle0")
    internal static let guideCircle1 = ImageAsset(name: "guide_circle1")
    internal static let guideCircle2 = ImageAsset(name: "guide_circle2")
    internal static let iconAccept = ImageAsset(name: "icon_accept")
    internal static let iconAddNormal = ImageAsset(name: "icon_add_normal")
    internal static let iconAddPressed = ImageAsset(name: "icon_add_pressed")
    internal static let iconAppStore = ImageAsset(name: "icon_app_store")
    internal static let iconBackNormal = ImageAsset(name: "icon_back_normal")
    internal static let iconBackPressed = ImageAsset(name: "icon_back_pressed")
    internal static let iconBgCategory = ImageAsset(name: "icon_bg_category")
    internal static let iconBlueNormal = ImageAsset(name: "icon_blue_normal")
    internal static let iconBluePressed = ImageAsset(name: "icon_blue_pressed")
    internal static let iconCamera = ImageAsset(name: "icon_camera")
    internal static let iconCategory = ImageAsset(name: "icon_category")
    internal static let iconCategoryBack = ImageAsset(name: "icon_category_back")
    internal static let iconCategoryBgBack = ImageAsset(name: "icon_category_bg_back")
    internal static let iconCollectionviewNormal = ImageAsset(name: "icon_collectionview_normal")
    internal static let iconCollectionviewPressed = ImageAsset(name: "icon_collectionview_pressed")
    internal static let iconContribute = ImageAsset(name: "icon_contribute")
    internal static let iconContribute2Normal = ImageAsset(name: "icon_contribute2_normal")
    internal static let iconContribute2Pressed = ImageAsset(name: "icon_contribute2_pressed")
    internal static let iconFeedbackNormal = ImageAsset(name: "icon_feedback_normal")
    internal static let iconFeedbackPressed = ImageAsset(name: "icon_feedback_pressed")
    internal static let iconFinishNormal = ImageAsset(name: "icon_finish_normal")
    internal static let iconFinishPressed = ImageAsset(name: "icon_finish_pressed")
    internal static let iconFlower = ImageAsset(name: "icon_flower")
    internal static let iconMail = ImageAsset(name: "icon_mail")
    internal static let iconMessages = ImageAsset(name: "icon_messages")
    internal static let iconMore = ImageAsset(name: "icon_more")
    internal static let iconMusic = ImageAsset(name: "icon_music")
    internal static let iconNavBackNormal = ImageAsset(name: "icon_nav_back_normal")
    internal static let iconNavBackPressed = ImageAsset(name: "icon_nav_back_pressed")
    internal static let iconNiceApp = ImageAsset(name: "icon_nice_app")
    internal static let iconPersonalpageNormal = ImageAsset(name: "icon_personalpage_normal")
    internal static let iconPersonalpagePressed = ImageAsset(name: "icon_personalpage_pressed")
    internal static let iconPhones = ImageAsset(name: "icon_phones")
    internal static let iconPhotos = ImageAsset(name: "icon_photos")
    internal static let iconPicviewNormal = ImageAsset(name: "icon_picview_normal")
    internal static let iconPicviewPressed = ImageAsset(name: "icon_picview_pressed")
    internal static let iconSafari = ImageAsset(name: "icon_safari")
    internal static let iconSave = ImageAsset(name: "icon_save")
    internal static let iconSession8 = ImageAsset(name: "icon_session-8")
    internal static let iconSession = ImageAsset(name: "icon_session")
    internal static let iconSetNormal = ImageAsset(name: "icon_set_normal")
    internal static let iconSetPressed = ImageAsset(name: "icon_set_pressed")
    internal static let iconSettingNormal = ImageAsset(name: "icon_setting_normal")
    internal static let iconSettingPressed = ImageAsset(name: "icon_setting_pressed")
    internal static let iconSettings = ImageAsset(name: "icon_settings")
    internal static let iconTimeline8 = ImageAsset(name: "icon_timeline-8")
    internal static let iconTimeline = ImageAsset(name: "icon_timeline")
    internal static let iconWeather = ImageAsset(name: "icon_weather")
    internal static let imageListFooterShadow = ImageAsset(name: "imageList_footer_shadow")
    internal static let imageListHeaderShadow = ImageAsset(name: "imageList_header_shadow")
    internal static let imageviewShadow = ImageAsset(name: "imageview_shadow")
    internal static let info = ImageAsset(name: "info")
    internal static let listIconFlower = ImageAsset(name: "list_icon_flower")
    internal static let listIconFlowerPressed = ImageAsset(name: "list_icon_flower_pressed")
    internal static let lockBottom = ImageAsset(name: "lock_bottom")
    internal static let lockTop = ImageAsset(name: "lock_top")
    internal static let lockTopMask = ImageAsset(name: "lock_top_mask")
    internal static let messagesLeftBubble = ImageAsset(name: "messages_left_bubble")
    internal static let messagesRightBubble = ImageAsset(name: "messages_right_bubble")
    internal static let personalEditCancelBtn = ImageAsset(name: "personal_edit_cancel_btn")
    internal static let personalEditConfirmBtn = ImageAsset(name: "personal_edit_confirm_btn")
    internal static let personalHeadDefault = ImageAsset(name: "personal_head_default")
    internal static let personalPicDefault = ImageAsset(name: "personal_pic_default")
    internal static let personalcenterIconUse = ImageAsset(name: "personalcenter_icon_use")
    internal static let personalcenterShadow = ImageAsset(name: "personalcenter_shadow")
    internal static let picShadow = ImageAsset(name: "pic_shadow")
    internal static let picShadowLeft = ImageAsset(name: "pic_shadow_left")
    internal static let picShadowPerson = ImageAsset(name: "pic_shadow_person")
    internal static let picShadowRight = ImageAsset(name: "pic_shadow_right")
    internal static let settingArrowNormal = ImageAsset(name: "setting_arrow_normal")
    internal static let settingArrowPressed = ImageAsset(name: "setting_arrow_pressed")
    internal static let shareBgNormal = ImageAsset(name: "share_bg_normal")
    internal static let shareBgPressed = ImageAsset(name: "share_bg_pressed")
    internal static let shareMeiyixiaNormal = ImageAsset(name: "share_meiyixia_normal")
    internal static let shareMeiyixiaPressed = ImageAsset(name: "share_meiyixia_pressed")
    internal static let shareMoreNormal = ImageAsset(name: "share_more_normal")
    internal static let shareMorePressed = ImageAsset(name: "share_more_pressed")
    internal static let shareQqNormal = ImageAsset(name: "share_qq_normal")
    internal static let shareQqPressed = ImageAsset(name: "share_qq_pressed")
    internal static let shareQqzoneNormal = ImageAsset(name: "share_qqzone_normal")
    internal static let shareQqzonePressed = ImageAsset(name: "share_qqzone_pressed")
    internal static let shareShadow = ImageAsset(name: "share_shadow")
    internal static let tagCloseNormal = ImageAsset(name: "tag_close_normal")
    internal static let tagClosePressed = ImageAsset(name: "tag_close_pressed")
    internal static let textZuimei = ImageAsset(name: "text_zuimei")
  }
  internal enum Pictorial {
    internal static let buttonBackNormal = ImageAsset(name: "ButtonBack_normal")
    internal static let buttonBackPressed = ImageAsset(name: "ButtonBack_pressed")
    internal static let buttonDownloadBigNormal = ImageAsset(name: "ButtonDownloadBig_normal")
    internal static let buttonDownloadBigPressed = ImageAsset(name: "ButtonDownloadBig_pressed")
    internal static let navbarMask = ImageAsset(name: "Navbar_mask")
    internal static let placeholder = ImageAsset(name: "Placeholder")
    internal static let settingClean = ImageAsset(name: "SettingClean")
    internal static let settingCommend = ImageAsset(name: "SettingCommend")
    internal static let settingComment = ImageAsset(name: "SettingComment")
    internal static let settingFeedback = ImageAsset(name: "SettingFeedback")
    internal static let titleSeparator = ImageAsset(name: "TitleSeparator")
    internal static let toolbarLikeNormal = ImageAsset(name: "ToolbarLike_normal")
    internal static let toolbarLikePressed = ImageAsset(name: "ToolbarLike_pressed")
    internal static let toolbarNationalNormal = ImageAsset(name: "ToolbarNational_normal")
    internal static let toolbarNationalPressed = ImageAsset(name: "ToolbarNational_pressed")
    internal static let toolbarPictorialNormal = ImageAsset(name: "ToolbarPictorial_normal")
    internal static let toolbarPictorialPressed = ImageAsset(name: "ToolbarPictorial_pressed")
    internal static let toolbarSettingNormal = ImageAsset(name: "ToolbarSetting_normal")
    internal static let toolbarSettingPressed = ImageAsset(name: "ToolbarSetting_pressed")
    internal static let toolbarWallpaperNormal = ImageAsset(name: "ToolbarWallpaper_normal")
    internal static let toolbarWallpaperPressed = ImageAsset(name: "ToolbarWallpaper_pressed")
    internal static let topMask = ImageAsset(name: "TopMask")
  }
  internal enum Unsplash {
    internal static let button1password = ImageAsset(name: "button-1password")
    internal static let buttonAction = ImageAsset(name: "button-action")
    internal static let buttonClose = ImageAsset(name: "button-close")
    internal static let buttonCollect = ImageAsset(name: "button-collect")
    internal static let buttonCollected = ImageAsset(name: "button-collected")
    internal static let buttonCross = ImageAsset(name: "button-cross")
    internal static let buttonDownload = ImageAsset(name: "button-download")
    internal static let buttonInfo = ImageAsset(name: "button-info")
    internal static let buttonLike = ImageAsset(name: "button-like")
    internal static let buttonStats = ImageAsset(name: "button-stats")
    internal static let buttonSubmitPlus = ImageAsset(name: "button-submit-plus")
    internal static let buttonUser = ImageAsset(name: "button-user")
    internal static let dismissCross = ImageAsset(name: "dismiss-cross")
    internal static let downloadArrow = ImageAsset(name: "download-arrow")
    internal static let iconAddToCollection = ImageAsset(name: "icon-add-to-collection")
    internal static let iconCollected = ImageAsset(name: "icon-collected")
    internal static let iconLocation = ImageAsset(name: "icon-location")
    internal static let iconLock = ImageAsset(name: "icon-lock")
    internal static let iconUrl = ImageAsset(name: "icon-url")
    internal static let locationPin = ImageAsset(name: "location-pin")
    internal static let more = ImageAsset(name: "more")
    internal static let onboardingPhoto0 = ImageAsset(name: "onboarding-photo-0")
    internal static let onboardingPhoto1 = ImageAsset(name: "onboarding-photo-1")
    internal static let onboardingPhoto10 = ImageAsset(name: "onboarding-photo-10")
    internal static let onboardingPhoto11 = ImageAsset(name: "onboarding-photo-11")
    internal static let onboardingPhoto12 = ImageAsset(name: "onboarding-photo-12")
    internal static let onboardingPhoto13 = ImageAsset(name: "onboarding-photo-13")
    internal static let onboardingPhoto14 = ImageAsset(name: "onboarding-photo-14")
    internal static let onboardingPhoto15 = ImageAsset(name: "onboarding-photo-15")
    internal static let onboardingPhoto16 = ImageAsset(name: "onboarding-photo-16")
    internal static let onboardingPhoto17 = ImageAsset(name: "onboarding-photo-17")
    internal static let onboardingPhoto18 = ImageAsset(name: "onboarding-photo-18")
    internal static let onboardingPhoto19 = ImageAsset(name: "onboarding-photo-19")
    internal static let onboardingPhoto2 = ImageAsset(name: "onboarding-photo-2")
    internal static let onboardingPhoto20 = ImageAsset(name: "onboarding-photo-20")
    internal static let onboardingPhoto21 = ImageAsset(name: "onboarding-photo-21")
    internal static let onboardingPhoto3 = ImageAsset(name: "onboarding-photo-3")
    internal static let onboardingPhoto4 = ImageAsset(name: "onboarding-photo-4")
    internal static let onboardingPhoto5 = ImageAsset(name: "onboarding-photo-5")
    internal static let onboardingPhoto6 = ImageAsset(name: "onboarding-photo-6")
    internal static let onboardingPhoto7 = ImageAsset(name: "onboarding-photo-7")
    internal static let onboardingPhoto8 = ImageAsset(name: "onboarding-photo-8")
    internal static let onboardingPhoto9 = ImageAsset(name: "onboarding-photo-9")
    internal static let panelChevron = ImageAsset(name: "panel-chevron")
    internal static let placeholderNoCollections = ImageAsset(name: "placeholder-no-collections")
    internal static let placeholderNoLikes = ImageAsset(name: "placeholder-no-likes")
    internal static let placeholderNoPhotos = ImageAsset(name: "placeholder-no-photos")
    internal static let search = ImageAsset(name: "search")
    internal static let trash = ImageAsset(name: "trash")
    internal static let unsplashLogo = ImageAsset(name: "unsplash-logo")
  }
  internal enum Dili {
    internal static let _1MineDown = ImageAsset(name: "1-mine-down")
    internal static let _1MineNor = ImageAsset(name: "1-mine-nor")
    internal static let _2MineDown = ImageAsset(name: "2-mine-down")
    internal static let _2MineNor = ImageAsset(name: "2-mine-nor")
    internal static let _4wordBj = ImageAsset(name: "4word-bj")
    internal static let _5wordBj = ImageAsset(name: "5word-bj")
    internal static let toolViewInputText = ImageAsset(name: "ToolViewInputText")
    internal static let toolViewInputTextHL = ImageAsset(name: "ToolViewInputTextHL")
    internal static let toolViewInputVoice = ImageAsset(name: "ToolViewInputVoice")
    internal static let toolViewInputVoiceHL = ImageAsset(name: "ToolViewInputVoiceHL")
    internal static let aboutus = ImageAsset(name: "aboutus")
    internal static let adeclose = ImageAsset(name: "adeclose")
    internal static let againDown = ImageAsset(name: "again-down")
    internal static let againNor = ImageAsset(name: "again-nor")
    internal static let appt = ImageAsset(name: "appt")
    internal static let backDown = ImageAsset(name: "back-down")
    internal static let backDownx = ImageAsset(name: "back-downx")
    internal static let backNor = ImageAsset(name: "back-nor")
    internal static let backNorx = ImageAsset(name: "back-norx")
    internal static let back2Down = ImageAsset(name: "back2-down")
    internal static let back2Nor = ImageAsset(name: "back2-nor")
    internal static let bjbj = ImageAsset(name: "bjbj")
    internal static let blackArrow = ImageAsset(name: "blackArrow")
    internal static let blacknopic = ImageAsset(name: "blacknopic")
    internal static let blueArrow = ImageAsset(name: "blueArrow")
    internal static let bubbleMin = ImageAsset(name: "bubble_min")
    internal static let cancel = ImageAsset(name: "cancel")
    internal static let close = ImageAsset(name: "close")
    internal static let dbutton = ImageAsset(name: "dbutton")
    internal static let dbutton1x = ImageAsset(name: "dbutton@1x")
    internal static let grayArrow = ImageAsset(name: "grayArrow")
    internal static let h1down = ImageAsset(name: "h1down")
    internal static let h1nor = ImageAsset(name: "h1nor")
    internal static let h2down = ImageAsset(name: "h2down")
    internal static let h2nor = ImageAsset(name: "h2nor")
    internal static let homeMoreDown = ImageAsset(name: "home-more-down")
    internal static let homeMoreNor = ImageAsset(name: "home-more-nor")
    internal static let lidown = ImageAsset(name: "lidown")
    internal static let linor = ImageAsset(name: "linor")
    internal static let logo = ImageAsset(name: "logo")
    internal static let logo2 = ImageAsset(name: "logo2")
    internal static let logoa = ImageAsset(name: "logoa")
    internal static let microphone = ImageAsset(name: "microphone")
    internal static let mineBg = ImageAsset(name: "mine-bg")
    internal static let network = ImageAsset(name: "network")
    internal static let newbj = ImageAsset(name: "newbj")
    internal static let nopic = ImageAsset(name: "nopic")
    internal static let `open` = ImageAsset(name: "open")
    internal static let openclosebj = ImageAsset(name: "openclosebj")
    internal static let phoneEye = ImageAsset(name: "phone-eye")
    internal static let phone1SaveDown = ImageAsset(name: "phone1-save-down")
    internal static let phone1SaveNor = ImageAsset(name: "phone1-save-nor")
    internal static let phone1ShareDown = ImageAsset(name: "phone1-share-down")
    internal static let phone1ShareNor = ImageAsset(name: "phone1-share-nor")
    internal static let phone2SaveDown = ImageAsset(name: "phone2-save-down")
    internal static let phone2SaveNor = ImageAsset(name: "phone2-save-nor")
    internal static let phone2ShareDown = ImageAsset(name: "phone2-share-down")
    internal static let phone2ShareNor = ImageAsset(name: "phone2-share-nor")
    internal static let save = ImageAsset(name: "save")
    internal static let setDown = ImageAsset(name: "set-down")
    internal static let setMine = ImageAsset(name: "set-mine")
    internal static let setNor = ImageAsset(name: "set-nor")
    internal static let set1 = ImageAsset(name: "set1")
    internal static let set2 = ImageAsset(name: "set2")
    internal static let set3 = ImageAsset(name: "set3")
    internal static let set4 = ImageAsset(name: "set4")
    internal static let set5 = ImageAsset(name: "set5")
    internal static let set6 = ImageAsset(name: "set6")
    internal static let set7 = ImageAsset(name: "set7")
    internal static let set8 = ImageAsset(name: "set8")
    internal static let shareDown = ImageAsset(name: "share-down")
    internal static let shareNor = ImageAsset(name: "share-nor")
    internal static let sharedown = ImageAsset(name: "sharedown")
    internal static let sharenor = ImageAsset(name: "sharenor")
    internal static let titlebj = ImageAsset(name: "titlebj")
    internal static let topbj = ImageAsset(name: "topbj")
    internal static let topbj2 = ImageAsset(name: "topbj2")
    internal static let upBj = ImageAsset(name: "up-bj")
    internal static let whiteArrow = ImageAsset(name: "whiteArrow")
    internal static let wordBj = ImageAsset(name: "word-bj")
    internal static let x = ImageAsset(name: "x")
  }
}
// swiftlint:enable identifier_name line_length nesting type_body_length type_name

// MARK: - Implementation Details

internal struct ColorAsset {
  internal fileprivate(set) var name: String

  @available(iOS 11.0, tvOS 11.0, watchOS 4.0, OSX 10.13, *)
  internal var color: AssetColorTypeAlias {
    return AssetColorTypeAlias(asset: self)
  }
}

internal extension AssetColorTypeAlias {
  @available(iOS 11.0, tvOS 11.0, watchOS 4.0, OSX 10.13, *)
  convenience init!(asset: ColorAsset) {
    let bundle = Bundle(for: BundleToken.self)
    #if os(iOS) || os(tvOS)
    self.init(named: asset.name, in: bundle, compatibleWith: nil)
    #elseif os(OSX)
    self.init(named: NSColor.Name(asset.name), bundle: bundle)
    #elseif os(watchOS)
    self.init(named: asset.name)
    #endif
  }
}

internal struct DataAsset {
  internal fileprivate(set) var name: String

  #if os(iOS) || os(tvOS) || os(OSX)
  @available(iOS 9.0, tvOS 9.0, OSX 10.11, *)
  internal var data: NSDataAsset {
    return NSDataAsset(asset: self)
  }
  #endif
}

#if os(iOS) || os(tvOS) || os(OSX)
@available(iOS 9.0, tvOS 9.0, OSX 10.11, *)
internal extension NSDataAsset {
  convenience init!(asset: DataAsset) {
    let bundle = Bundle(for: BundleToken.self)
    #if os(iOS) || os(tvOS)
    self.init(name: asset.name, bundle: bundle)
    #elseif os(OSX)
    self.init(name: NSDataAsset.Name(asset.name), bundle: bundle)
    #endif
  }
}
#endif

internal struct ImageAsset {
  internal fileprivate(set) var name: String

  internal var image: AssetImageTypeAlias {
    let bundle = Bundle(for: BundleToken.self)
    #if os(iOS) || os(tvOS)
    let image = AssetImageTypeAlias(named: name, in: bundle, compatibleWith: nil)
    #elseif os(OSX)
    let image = bundle.image(forResource: NSImage.Name(name))
    #elseif os(watchOS)
    let image = AssetImageTypeAlias(named: name)
    #endif
    guard let result = image else { fatalError("Unable to load image named \(name).") }
    return result
  }
}

internal extension AssetImageTypeAlias {
  @available(iOS 1.0, tvOS 1.0, watchOS 1.0, *)
  @available(OSX, deprecated,
    message: "This initializer is unsafe on macOS, please use the ImageAsset.image property")
  convenience init!(asset: ImageAsset) {
    #if os(iOS) || os(tvOS)
    let bundle = Bundle(for: BundleToken.self)
    self.init(named: asset.name, in: bundle, compatibleWith: nil)
    #elseif os(OSX)
    self.init(named: NSImage.Name(asset.name))
    #elseif os(watchOS)
    self.init(named: asset.name)
    #endif
  }
}

private final class BundleToken {}
